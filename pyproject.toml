[project]
name = "penn-football-roster-scraper"
version = "0.0.0"
description = "roster-scraper"
authors = [
    {name = "Anna Duan", email = "annaduan@sas.upenn.edu"},
]
dependencies = [
    "pandas>=2.2.3,<3.0.0",
    "numpy>=2.2.4,<2.3.0",
]
requires-python = ">=3.11,<3.13"
license = {text = "PROPRIETARY"}

[project.optional-dependencies]
tests = [
    "pytest",           # https://pypi.org/project/pytest
    "pytest-html",      # https://pypi.org/project/pytest-html
    "pytest-cov",       # https://pypi.org/project/pytest-cov/
    "pytest-sugar",     # https://pypi.org/project/pytest-sugar
    "pytest-icdiff",    # https://pypi.org/project/pytest-icdiff
]
local = [
    "ipython>=8.24.0",   # https://pypi.org/project/ipython
    "pre-commit>=3.7.1", # https://pypi.org/project/pre-commit
    "ruff>=0.11.7,<0.12.0",          # https://docs.astral.sh/ruff/
    "notebook>=7.2.0,<8.0.0",
    "fsspec>=2025.3.2",
    "s3fs",
]

[[tool.pdm.source]]
url = "${PY_REPO_URL}"
verify_ssl = true
name = "forty5park"

[build-system]
requires = ["pdm-pep517>=1.1.0"]
build-backend = "pdm.pep517.api"


[tool.pytest.ini_options]
addopts = "--ignore=__pypackages__ --junit-xml=./test_report.xml --html=./test_report.html --self-contained-html --cov --cov-report html --cov-report lcov:lcov.info -l -ra"
testpaths = ["tests"]
# log_cli = true
# log_cli_level = "INFO"

[tool.coverage.run]
source = ["hyperlocation", "tests"]

[tool.coverage.report]
fail_under = 50

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
show_error_codes = true
show_column_numbers = true
show_error_context = true
pretty = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true

[tool.pyright]
exclude = ["**/__pycache__", "__pypackages__"]

[tool.ruff]
lint.select = [
    "E",
    "W",
    "F",
    "I001",
    "UP",
    "N",
    "YTT",
    "S",
    "FBT",
    "B",
    "A",
    "C4",
    "T10",
    "EM",
    "ISC",
    "ICN",
    "T20",
    "PT",
    "Q",
    "RET",
    "SIM",
    "TID",
    "ARG",
    "DTZ",
    "ERA",
    "PD",
    "PGH",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "RUF",
]
exclude = ["scripts/*", "*.ipynb", "sandbox_ftexp.py"]
lint.ignore = ["E501", "RET504", "EM101", "PD901", "PLR0913", "ISC001"]
lint.unfixable = ["F401", "F841"]
extend-exclude = [
    "__pypackages__",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "build",
    "dist",
    "venv",
    "pkgs",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"**/__init__.py" = ["E402", "F401"]
"**/tests/*.py" = ["S101", "ARG001", "ARG002", "PLR2004"]
"tests/conftest.py" = [
    "E402", # module level import not at top of file
]
"hyperlocation/hyper_sql.py" = ["W291", "W293"]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.root_validator",
    "pydantic.validator",
]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.pylint.main]
extension-pkg-whitelist = ["pydantic"]
load-plugins = ["pylint_pytest", "pylint_pydantic"]
jobs = 0

[tool.pylint."messages control"]
disable = [
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-module-docstring",
    "missing-docstring",
    "invalid-name",
    "unused-argument",
    "too-many-locals",
    "too-few-public-methods",
    "too-many-arguments",
    "fixme",
]
